
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <math.h>

int WriteResults(double eta[], int mboxsize, int nboxsize,int p,int tn)
{
  double *phi;
  phi= new double[mboxsize*nboxsize];
  int size=mboxsize*nboxsize;
  int i,j,pnn,jn,pind;
    // making the phi array
    for (i=0;i<mboxsize;i++)
    {
      for (j=0;j<nboxsize;j++)
      {
        jn=j*mboxsize;
        phi[i+jn]=0;
        for (pind=0;pind<p;pind++)
        {
          pnn=pind*size;
          phi[i+jn]=phi[i+jn]+eta[i+jn+pnn]*eta[i+jn+pnn];
        }
      }
    }
// writing
  ofstream myfile;
      // make a string like "result_5.txt"
      int n;
      char filename[200];
      n=sprintf (filename, "results/result_ %d .txt", tn);
      myfile.open (filename);
      for (i=0;i<mboxsize;i++)
      {
        for (j=0;j<nboxsize;j++)
        {
          myfile << phi[i+j*mboxsize] << "      "; 
        }
        myfile << "\n";
      }
      myfile.close();
    /*
    // make picture of phi
    if  (tn % 100 ==0)
    {
      char filename[100];
      n=sprintf (filename, "im_ %d .png", tn);
      pngwriter png(mboxsize,nboxsize,1,filename); 
      for (i=0;i<size-1;i++)
      {
        for (j=0;j<size-1;j++)
        {
          png.plot(i,j, phi[i][j], phi[i][j], phi[i][j]);
  }
  }
  png.close()
  }
  */
return(0);
}


// For making index maps:


   //--------------------------------------
   if  (tn % 5 ==0)
   {
     // making the phi array
     for (k=0;k<kboxsize;k++)
     {
       kn=k*size2;
       for (j=0;j<nboxsize;j++)
       {
         jn=j*mboxsize;
         for (i=0;i<mboxsize;i++)
         {
           phi[i+jn+kn]=0;
           for (pind=0;pind<p;pind++)
           {
             pnn=pind*size3;
             phi[i+jn+kn]=phi[i+jn+kn]+eta[i+jn+kn+pnn]*eta[i+jn+kn+pnn];
           }
         }
       }
     }
     // writing
     int n;
     int maxind;
     double maxeta;
     char filename[200];
     // writing
     ofstream myfile2;
     // make a string like "result_5.txt"
     n=sprintf (filename, "results/Fullres_ %d .txt", tn);
     myfile2.open (filename);
     for (k=0;k<kboxsize;k++)
     {
       kn=k*size2;
       for (j=0;j<nboxsize;j++)
       {
         jn=j*mboxsize;
         for (i=0;i<mboxsize;i++)
         {
           maxeta=eta[i+jn+kn];
           maxind=0;
           for (indc=0;indc<p;indc++) //loop around the neighbor and kick the minimum out and replace it with new growing eta
             {
               if(maxeta<eta[i+jn+kn+indc*size3]){maxeta=eta[i+jn+kn+indc*size3]; maxind=indc;}
             }
           myfile2 << inds[i+jn+kn+maxind*size3] << "   "; 
           
         }
         myfile2 << endl;
       }
     }
     myfile2.close();
   }
   
   